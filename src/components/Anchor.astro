---
import Dash from './Dash.astro'

interface Props {
  href?: string
  primary?: string
  secondary?: string | string[]
  external?: boolean
  accesskey?: string
  isCurrent?: boolean
  wrap?: boolean
}

const {href, primary, secondary, external, accesskey, isCurrent, wrap} = Astro.props
---

<a
  class={`Anchor ${wrap ? 'Anchor--wrap' : ''}`}
  href={href}
  target={external ? '_blank' : undefined}
  rel={external ? 'noopener noreferrer' : undefined}
  accesskey={accesskey}
  aria-current={isCurrent ? 'page' : undefined}
>
  <span class="Anchor__Primary">{primary}</span>
  {
    Array.isArray(secondary) ? (
      <span class="Anchor__Secondary">
        {secondary.map((item, index) => (
          <>
            {item}
            {index < secondary.length - 1 && <Dash />}
          </>
        ))}
      </span>
    ) : typeof secondary === 'string' ? (
      <span class="Anchor__Secondary">{secondary}</span>
    ) : null
  }
</a>

<style>
  .Anchor {
    color: currentColor;
    display: flex;
    align-items: baseline;
    background-color: transparent;
    text-decoration: none;
    position: relative;
  }

  .Anchor--wrap {
    flex-wrap: wrap;
  }

  .Anchor:focus-visible,
  .Anchor:focus,
  .Anchor:active,
  .Anchor:hover {
    > .Anchor__Primary {
      text-decoration-thickness: 2px;
      text-underline-offset: 5px;
    }

    > .Anchor__Primary::before {
      opacity: 0.1;
    }

    @media (prefers-reduced-motion: no-preference) {
      > .Anchor__Secondary::before {
        width: 2rem;
      }
    }
  }

  .Anchor__Primary {
    text-decoration: underline;
    text-underline-offset: 6px;
    text-decoration-thickness: 1px;
    text-decoration-color: var(--anchor-color-underline);
    position: relative;
  }

  .Anchor__Primary::before {
    content: '';
    position: absolute;
    inset: 0;
    background-color: var(--anchor-color-underline);
    top: 2px;
    bottom: px;
    right: -4px;
    left: -4px;
    z-index: -1;
    opacity: 0;
    transition: opacity 100ms ease-in-out;
    border-radius: 0.25rem;
  }

  .Anchor__Primary {
    position: relative;
  }

  .Anchor__Secondary {
    display: flex;
    align-items: baseline;
  }

  .Anchor__Secondary::before {
    content: '';
    height: 1px;
    background: currentColor;
    width: 1rem;
    display: block;
    margin: 0 1px;
    transform-origin: left;
    transform: translateY(-0.25em);
    position: relative;
  }

  .Anchor__Secondary::after {
    content: var(--anchor-secondary-content, '');
  }

  @media (prefers-reduced-motion: no-preference) {
    .Anchor__Secondary::before {
      transition:
        width 100ms cubic-bezier(0.4, 0, 0.2, 1),
        transform 100ms cubic-bezier(0.4, 0, 0.2, 1);
    }
  }
</style>
