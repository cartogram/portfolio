---
import Anchor from './Anchor.astro'
---

<theme-toggle>
  <nav class="Controls">
    <button class="Theme">
      <Anchor primary="Theme" secondary="" />
    </button>
    <button class="Color">
      <Anchor primary="Color" secondary="" />
    </button>
  </nav>
</theme-toggle>

<script>
  class ThemeToggle extends HTMLElement {
    constructor() {
      super()

      const themeButton = this.querySelector('.Theme')
      const colorButton = this.querySelector('.Color')

      const setTheme = ({dark, color}: {dark: boolean; color: boolean}) => {
        const doc = document.documentElement
        doc.classList[dark ? 'add' : 'remove']('theme-dark')
        doc.classList[color ? 'add' : 'remove']('color-mono')

        if (themeButton) {
          themeButton.setAttribute('aria-pressed', String(dark))
        }
        if (colorButton) {
          colorButton.setAttribute('aria-pressed', String(color))
        }
      }

      if (themeButton) {
        themeButton.addEventListener('click', () =>
          setTheme({
            dark: !this.isDark(),
            color: this.isColorMono(),
          }),
        )
      }

      if (colorButton) {
        colorButton.addEventListener('click', () =>
          setTheme({
            dark: this.isDark(),
            color: !this.isColorMono(),
          }),
        )
      }

      setTheme({
        dark: this.isDark(),
        color: this.isColorMono(),
      })
    }

    isDark() {
      return document.documentElement.classList.contains('theme-dark')
    }

    isColorMono() {
      return document.documentElement.classList.contains('color-mono')
    }
  }
  customElements.define('theme-toggle', ThemeToggle)
</script>

<style>
  .Theme {
    --anchor-secondary-content: 'Light';
  }

  :global(.theme-dark) .Theme {
    --anchor-secondary-content: 'Dark';
  }

  .Color {
    --anchor-secondary-content: 'Auto';
  }

  :global(.color-mono) .Color {
    --anchor-secondary-content: 'Mono';
  }

  :global(.color-mono) {
    --color: #000 !important;
    --wordmark-opacity: 0.1;
  }
</style>
