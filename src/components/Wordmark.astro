---
const letters = ["C", "A", "R", "T", "O", "G", "R", "A", "M"];
const trails = 6;
---

<cartogram-wordmark class="Wordmark">
  {
    letters.map((l) => (
      <div class="Track">
        {Array.from({ length: trails }).map((_, i) => (
          <span style={`--index: ${trails - i}`} class="Letter">
            {l}
          </span>
        ))}
      </div>
    ))
  }
</cartogram-wordmark>

<style>
  .Wordmark {
    position: absolute;
    z-index: var(--z-index-1);
    top: 0;
    right: 0;
    left: 0;
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 100vh;
    pointer-events: none;
    overflow-x: hidden;
  }

  .Track {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
    color: var(--wordmark-background-color);
  }

  .Letter {
    position: absolute;
    font-size: 15vw;
    text-shadow:
      -1px -1px 0 var(--wordmark-color),
      1px -1px 0 var(--wordmark-color),
      -1px 1px 0 var(--wordmark-color),
      1px 1px 0 var(--wordmark-color);
    z-index: var(--index);
  }

  .Letter:first-child {
    color: var(--wordmark-color);
  }
</style>

<script>
  import { animate, stagger, cubicBezier, hover } from "motion";

  class CartogramWordmark extends HTMLElement {
    constructor() {
      super();

      const size = {
        width: window.innerWidth,
        height: window.innerHeight,
      };

      const tracks = this.querySelectorAll(".Track");

      tracks.forEach((track) => {
        const height = this.randomNumber(0, size.height, 0.5);
        const letters = track.querySelectorAll(".Letter");
        const easing = cubicBezier(0.05, 0.83, 0.56, 1);

        letters.forEach((letter, index) => {
          animate(
            letter,
            {
              y: [0, height + index * 10],

              rotateZ: [35, 35],
              skewX: [-18, -18],
              skewY: [-18, -18],
            },
            {
              delay: stagger(0.1),
              duration: 3,
              ease: easing,
            }
          );
        });
      });
    }
    randomNumber(min: number, max: number, correction = 0) {
      return Math.floor((Math.random() - correction) * (max - min + 1)) + min;
    }

    isDark() {
      return document.documentElement.classList.contains("theme-dark");
    }
  }
  customElements.define("cartogram-wordmark", CartogramWordmark);
</script>
