---
import Head from "../components/Head.astro";
import Nav from "../components/Nav.astro";
import Footer from "../components/Footer.astro";
import Wordmark from "../components/Wordmark.astro";
import { ClientRouter } from "astro:transitions";

interface Props {
  title?: string | undefined;
  description?: string | undefined;
  layout?: "home" | "single";
  color?: string | undefined;
}

const { title, description, layout = "home", color } = Astro.props;
---

<html lang="en" style={color ? `--color: ${color}` : ""}>
  <head>
    <Head
      title={`Matt Seccafien ${title ? `~ ${title}` : ""}`}
      description={description}
    />
    <ClientRouter />
  </head>
  <body>
    <main class="Main">
      <Wordmark />
      <Nav title="Matt Seccafien" />

      <section class={`Layout Wrap Layout--${layout}`}>
        <div class="Masthead">
          <slot name="masthead" />
        </div>

        {
          layout === "home" && (
            <div class="Projects">
              <slot name="projects" />
            </div>
          )
        }

        {
          layout === "single" && (
            <div class="Hero">
              <slot name="hero" />
            </div>
          )
        }

        <div class="Content">
          {
            layout === "single" && (
              <div class="Chapters">
                <slot name="chapters" />
              </div>
            )
          }

          <slot name="content" />
        </div>

        <footer class="Footer">
          <Footer />
        </footer>
      </section>
    </main>

    <script>
      document.addEventListener("astro:page-load", () => {
        document.documentElement.classList.add("loaded");
      });
    </script>
  </body>
</html>

<style>
  .Layout {
    width: 100%;
    min-height: 100vh;
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-auto-rows: auto;
    grid-column-gap: 2rem;
    grid-row-gap: 2rem;
    grid-template-areas:
      "masthead masthead masthead masthead"
      "projects projects projects projects"
      "content content content content"
      "footer footer footer footer";
    z-index: var(--z-index-2);
    position: relative;
  }

  .Layout--single {
    grid-template-areas:
      "masthead masthead masthead masthead"
      "hero hero hero hero"
      "content content content content"
      "footer footer footer footer";
  }
  @media (width > 1024px) {
    .Layout {
      grid-template-areas:
        "masthead masthead masthead ."
        "projects projects projects ."
        "content content content content"
        "footer footer . .";
    }

    .Layout--single {
      grid-template-areas:
        "masthead masthead . ."
        "hero hero hero hero"
        "content content content content"
        "footer footer . .";
    }
  }

  @media (width > 1500px) {
    .Layout {
      grid-template-areas:
        "masthead masthead . ."
        ". . projects projects"
        "content content content content"
        "footer footer . .";
    }

    .Layout--single {
      grid-template-areas:
        "masthead masthead . ."
        "hero hero hero hero"
        "content content content content"
        "footer footer . .";
    }
  }

  .Layout {
    opacity: 0;
    transform: translateY(1rem);
    transition: 0.3s ease-in-out;
    transition-delay: 0.3s;
    transition-property: opacity, transform;
  }

  :global(.loaded) .Layout {
    opacity: 1;
    transform: translateY(0);
  }

  .Masthead {
    grid-area: masthead;
  }

  .Footer {
    grid-area: footer;
  }

  .Hero {
    grid-area: hero;
  }

  .Projects {
    grid-area: projects;
  }

  .Layout--single .Projects {
    position: sticky;
    top: 0;
    align-self: start;
  }

  .Content {
    grid-area: content;
    display: grid;
    /* grid-template-areas: "chapters chapters chapters chapters"; */

    p {
      max-width: 53ch;
    }

    > div {
      grid-column: 1 / 5;
      grid-row: 2 / 2;
    }

    .Chapters {
      grid-column: 1 / 5;
      grid-row: 1 / 2;
      padding-top: 2rem;
    }

    .Chapters li {
      font-size: clamp(var(--font-size-sm), 5vw, var(--font-size-md));
    }
  }

  .Layout--single .Content {
    grid-template-columns: subgrid;
  }

  @media (width > 1024px) {
    /* .Layout--single .Content {
      grid-template-columns: subgrid;
    } */

    .Chapters {
      position: sticky;
      top: 0;
      align-self: start;
    }

    .Content {
      > div {
        grid-column: 1 / 4;
        grid-row: 1 / 2;
      }

      .Chapters {
        grid-column: 4 / 5;
        grid-row: 1 / 2;
      }
    }
  }
</style>
